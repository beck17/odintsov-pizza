generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum OrderStatus {
  PENDING
  SUCCESSED
  CANCELLED
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id Int @id @default(autoincrement())

  role UserRole @default(USER)

  provider   String?
  providerId String?
  verified   DateTime

  fullName String
  email    String @unique
  password String

  cart             Cart?
  order            Order[]
  verificationCode VerificationCode?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id Int @id @default(autoincrement())

  name     String    @unique
  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id Int @id @default(autoincrement())

  name     String
  imageUrl String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  ingredients Ingredient[]
  items       ProductItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductItem {
  id Int @id @default(autoincrement())

  price     Int
  size      Int?
  pizzaType Int?

  cartItem CartItem[]

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ingredient {
  id Int @id @default(autoincrement())

  name     String @unique
  price    Int
  imageUrl String

  products Product[]
  cartItem CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id Int @id @default(autoincrement())

  totalAmount Int @default(0)

  cartItem CartItem[]

  user   User? @relation(fields: [userId], references: [id])
  userId Int?  @unique

  token String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id Int @id @default(autoincrement())

  quantity Int

  cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int

  productItem   ProductItem @relation(fields: [productItemId], references: [id])
  productItemId Int

  ingredients Ingredient[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id Int @id @default(autoincrement())

  user   User? @relation(fields: [userId], references: [id])
  userId Int?

  token       String
  totalAmount Int
  status      OrderStatus
  paymentId   String?
  iems        Json

  fullname String
  adress   String
  email    String
  phone    String
  comment  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationCode {
  id Int @id @default(autoincrement())

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  code String

  createdAt DateTime @default(now())

  @@unique([userId, code])
}
